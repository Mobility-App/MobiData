//
// ValidityType.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public final class ValidityType: Codable, Hashable {

    public var timeFrom: Date?
    public var timeTo: Date?
    public var visible: Bool?

    public init(timeFrom: Date? = nil, timeTo: Date? = nil, visible: Bool? = nil) {
        self.timeFrom = timeFrom
        self.timeTo = timeTo
        self.visible = visible
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case timeFrom
        case timeTo
        case visible
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(timeFrom, forKey: .timeFrom)
        try container.encodeIfPresent(timeTo, forKey: .timeTo)
        try container.encodeIfPresent(visible, forKey: .visible)
    }

    public static func == (lhs: ValidityType, rhs: ValidityType) -> Bool {
        lhs.timeFrom == rhs.timeFrom &&
        lhs.timeTo == rhs.timeTo &&
        lhs.visible == rhs.visible
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(timeFrom?.hashValue)
        hasher.combine(timeTo?.hashValue)
        hasher.combine(visible?.hashValue)
        
    }
}

